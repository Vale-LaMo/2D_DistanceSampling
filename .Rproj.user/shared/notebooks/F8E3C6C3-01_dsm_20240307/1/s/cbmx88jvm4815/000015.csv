"0","load(paste(""output/fitVU_"", params$species_name, "".RData"", sep = """"))"
"0",""
"0","est = fitVU"
"0",""
"0","Nhat.yx=bias=NULL"
"0","b=est$b; hr=match.fun(est$hr); ystart=est$ystart; pi.x=match.fun(est$pi.x)"
"0","logphi=est$logphi; w=est$w"
"0","x = obsdata$distance"
"0","f.x=p.x.std=adbnTRUE=0"
"0","arrange(obsdata, distance) %>% "
"0","  dplyr::select(object, distance) %>% "
"0","  na.omit() -> gridx.df"
"0",""
"0","p.xpifit=p.pi.x(gridx.df$distance,b,hr,ystart,pi.x,logphi,w)"
"0","mufit=integrate(f=p.pi.x,lower=0,upper=w,b=b,hr=hr"
"0","                  ,ystart=ystart,pi.x=pi.x,logphi=logphi,w=w)$value # phat media dei gruppi"
"0","f.xfit=p.xpifit/mufit"
"0","p.xfit=px(gridx.df$distance,b,hr,ystart,nint=nint)"
"0","ptot=integrate(f=px,lower=0,upper=w,b=b,hr=hr,ystart=ystart)$value"
"0","p.xfit.std=p.xfit/ptot"
"0","adbn=pi.x(gridx.df$distance,logphi,w)"
"0",""
"0","bind_cols(p=p.xfit.std, gridx.df) -> fitted.p.df"
"0","bind_cols(p=p.xfit, gridx.df) -> fitted.p.df"
"0","fitted.p.df"
